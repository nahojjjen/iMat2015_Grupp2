/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package imat.panels.contentPanels;

import imat.models.CustomerModel;
import javax.swing.ImageIcon;
import javax.swing.JLabel;

/**
 *
 * @author Viktor
 */
public class PanelCreditCard extends javax.swing.JPanel {

    private ImageIcon ok = new ImageIcon("src/resources/ok.png");
    private ImageIcon notOk = new ImageIcon("src/resources/notOk.png");
    private String tempRealCardNbr;
    private String tempFakeCardNbr;

    /**
     * Creates new form PanelCreditCard
     */
    public PanelCreditCard() {
        initComponents();
        setCardInfo();
        setLabels();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cardTypeButtonGroup = new javax.swing.ButtonGroup();
        visaMasterRadioButton = new javax.swing.JRadioButton();
        americanRadioButton = new javax.swing.JRadioButton();
        cardTypeLabel = new javax.swing.JLabel();
        carNumberLabel = new javax.swing.JLabel();
        cardHolderLabel = new javax.swing.JLabel();
        cardExpireLabel = new javax.swing.JLabel();
        cardSecurityLabel = new javax.swing.JLabel();
        digitsInCardNumberLabel = new javax.swing.JLabel();
        monthComboBox = new javax.swing.JComboBox();
        yearComboBox = new javax.swing.JComboBox();
        securityReminderLabel = new javax.swing.JLabel();
        cardHolderReminderLabel = new javax.swing.JLabel();
        securityNumberTextField = new javax.swing.JFormattedTextField();
        cardNumberOkLabel = new javax.swing.JLabel();
        holderNameOkLabel = new javax.swing.JLabel();
        secNumberOkLabel = new javax.swing.JLabel();
        cardHolderTextField = new javax.swing.JTextField();
        cardNumberTextField = new javax.swing.JTextField();

        setMinimumSize(new java.awt.Dimension(485, 300));
        setOpaque(false);

        visaMasterRadioButton.setText("VISA/MasterCard");
        visaMasterRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visaMasterRadioButtonActionPerformed(evt);
            }
        });

        americanRadioButton.setText("American Express");
        americanRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                americanRadioButtonActionPerformed(evt);
            }
        });

        cardTypeLabel.setText("Korttyp:");

        carNumberLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        carNumberLabel.setText("Kortnummer:");

        cardHolderLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        cardHolderLabel.setText("Kortinnehavare:");

        cardExpireLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        cardExpireLabel.setText("Giltighetstid:");

        cardSecurityLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        cardSecurityLabel.setText("CVV2-nummer:");

        digitsInCardNumberLabel.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        digitsInCardNumberLabel.setText("16 siffror");

        monthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Januari", "Februari", "Mars", "April", "Maj", "Juni", "Juli", "Augusti", "September", "Oktober", "November", "December" }));

        yearComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022" }));

        securityReminderLabel.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        securityReminderLabel.setText("Sista 3 siffrorna på kortets baksida");

        cardHolderReminderLabel.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        cardHolderReminderLabel.setText("Namn på kortet");

        securityNumberTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###"))));
        securityNumberTextField.setToolTipText("Endast siffror");
        securityNumberTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                securityNumberTextFieldKeyReleased(evt);
            }
        });

        cardNumberOkLabel.setToolTipText("Bara siffror, inga andra tecken");

        holderNameOkLabel.setToolTipText("Endast bokstäverna A-Z");

        secNumberOkLabel.setToolTipText("Endast siffror");

        cardHolderTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cardHolderTextFieldKeyPressed(evt);
            }
        });

        cardNumberTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cardNumberTextFieldKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cardSecurityLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cardExpireLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cardHolderLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(carNumberLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(monthComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(9, 9, 9)
                                .addComponent(yearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(securityNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addComponent(secNumberOkLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5, 5)
                                .addComponent(securityReminderLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cardNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cardNumberOkLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(5, 5, 5)
                                        .addComponent(digitsInCardNumberLabel))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cardHolderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(10, 10, 10)
                                        .addComponent(holderNameOkLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(5, 5, 5)
                                        .addComponent(cardHolderReminderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(cardTypeLabel)
                        .addGap(48, 48, 48)
                        .addComponent(visaMasterRadioButton)
                        .addGap(36, 36, 36)
                        .addComponent(americanRadioButton)))
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(cardTypeLabel))
                    .addComponent(visaMasterRadioButton)
                    .addComponent(americanRadioButton))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(carNumberLabel))
                            .addComponent(cardNumberOkLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(digitsInCardNumberLabel))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(cardNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(cardHolderLabel))
                    .addComponent(cardHolderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(holderNameOkLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(cardHolderReminderLabel)))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(cardExpireLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(monthComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(yearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(cardSecurityLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(securityNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(secNumberOkLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(securityReminderLabel))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void visaMasterRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visaMasterRadioButtonActionPerformed
        CustomerModel.setCardType("VISA/MasterCard");
        setDigitsLabel("VISA/MasterCard");
        setOkLabel(isCardNumberCorrect(), cardNumberOkLabel);
    }//GEN-LAST:event_visaMasterRadioButtonActionPerformed

    private void americanRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_americanRadioButtonActionPerformed
        CustomerModel.setCardType("American Express");
        setDigitsLabel("American Express");
        setOkLabel(isCardNumberCorrect(), cardNumberOkLabel);
    }//GEN-LAST:event_americanRadioButtonActionPerformed

    private void securityNumberTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_securityNumberTextFieldKeyReleased
        setOkLabel(isSecNumberCorrect(), secNumberOkLabel);
    }//GEN-LAST:event_securityNumberTextFieldKeyReleased

    private void cardHolderTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cardHolderTextFieldKeyPressed
        setOkLabel(isCardHolderNameCorrect(), holderNameOkLabel);
    }//GEN-LAST:event_cardHolderTextFieldKeyPressed

    private void cardNumberTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cardNumberTextFieldKeyTyped
       setOkLabel(isCardNumberCorrect(), cardNumberOkLabel);
    }//GEN-LAST:event_cardNumberTextFieldKeyTyped
    private void setCardInfo() {
        
        cardHolderTextField.setText(CustomerModel.getCardHolderName());
        //securityNumberTextField.setText("" + CustomerModel.getCardVerification());
        monthComboBox.setSelectedIndex(CustomerModel.getCardMonth());
        yearComboBox.setSelectedIndex(CustomerModel.getCardYear());
        cardTypeButtonGroup.add(americanRadioButton);
        cardTypeButtonGroup.add(visaMasterRadioButton);
        setSelectedCardType(CustomerModel.getCardType());
        
        securityNumberTextField.setText(CustomerModel.getCardVerification());

              
        if(CustomerModel.getCardNumber().length() > 14){
            tempRealCardNbr = CustomerModel.getCardNumber();
            try{
                tempFakeCardNbr = "**** **** **** " + tempRealCardNbr.substring(12);
            }catch(StringIndexOutOfBoundsException e){                
            }
            cardNumberTextField.setText(tempFakeCardNbr);
        }
        
    }
    public void clearCardInfo() {        
        cardHolderTextField.setText("");
        securityNumberTextField.setText("");
        monthComboBox.setSelectedIndex(0);
        yearComboBox.setSelectedIndex(0);
        cardTypeButtonGroup.add(americanRadioButton);
        cardTypeButtonGroup.add(visaMasterRadioButton);
        //setSelectedCardType(CustomerModel.getCardType());
        cardNumberTextField.setText("");        
    }

    public void setLabels() {
        setOkLabel(isCardNumberCorrect(), cardNumberOkLabel);
        setOkLabel(isCardHolderNameCorrect(), holderNameOkLabel);
        setOkLabel(isSecNumberCorrect(), secNumberOkLabel);
        setDigitsLabel(CustomerModel.getCardType());
    }

    /**
     * saves the checked card type
     */
    private void setSelectedCardType(String str) {
        if (str.equals("American Express")) {
            americanRadioButton.setSelected(true);
        } else {
            visaMasterRadioButton.setSelected(true);
        }
    }

    /**
     * sets reminder label for card numbers
     */
    private void setDigitsLabel(String str) {
        if (str.equals("American Express")) {
            digitsInCardNumberLabel.setText("15 siffror");
        } else {
            digitsInCardNumberLabel.setText("16 siffror");
        }
    }

    /**
     * saves all field data
     */
    public void save() {
        
        CustomerModel.setCardVerification(Integer.parseInt(securityNumberTextField.getText()));
        CustomerModel.setCardHolderName(cardHolderTextField.getText());
        CustomerModel.setCardMonth(monthComboBox.getSelectedIndex());
        CustomerModel.setCardYear(yearComboBox.getSelectedIndex());
        if (cardNumberTextField.getText().equals(tempFakeCardNbr)){
            CustomerModel.setCardNumber(tempRealCardNbr);
        } else{
            CustomerModel.setCardNumber(cardNumberTextField.getText());
        }
    }

    /**
     * @return true if card number is filled correctly
     */
    public boolean isCardNumberCorrect() {
        if (cardNumberTextField.getText().equals(tempFakeCardNbr)){
            return true;
        }
        return (CustomerModel.cardNumberTest(cardNumberTextField.getText()));
    }

    /**
     * @return true if security number is filled correctly
     */
    public boolean isSecNumberCorrect() {
        return (CustomerModel.cardVerificationTest(securityNumberTextField.getText()));
    }

    /**
     * @return true if card holder name is filled correctly
     */
    public boolean isCardHolderNameCorrect() {
        return (CustomerModel.cardHolderNameTest(cardHolderTextField.getText()));
    }

    public boolean isAllCorrect(){
        if(isSecNumberCorrect() && isCardHolderNameCorrect() && isCardNumberCorrect()){
            return true;
        }
        return false;
    }
    private void setOkLabel(Boolean bool, JLabel label) {
        if (bool) {
            label.setIcon(ok);
        } else {
            label.setIcon(notOk);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton americanRadioButton;
    private javax.swing.JLabel carNumberLabel;
    private javax.swing.JLabel cardExpireLabel;
    private javax.swing.JLabel cardHolderLabel;
    private javax.swing.JLabel cardHolderReminderLabel;
    private javax.swing.JTextField cardHolderTextField;
    private javax.swing.JLabel cardNumberOkLabel;
    private javax.swing.JTextField cardNumberTextField;
    private javax.swing.JLabel cardSecurityLabel;
    private javax.swing.ButtonGroup cardTypeButtonGroup;
    private javax.swing.JLabel cardTypeLabel;
    private javax.swing.JLabel digitsInCardNumberLabel;
    private javax.swing.JLabel holderNameOkLabel;
    private javax.swing.JComboBox monthComboBox;
    private javax.swing.JLabel secNumberOkLabel;
    private javax.swing.JFormattedTextField securityNumberTextField;
    private javax.swing.JLabel securityReminderLabel;
    private javax.swing.JRadioButton visaMasterRadioButton;
    private javax.swing.JComboBox yearComboBox;
    // End of variables declaration//GEN-END:variables
}
