/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package imat.contentPanels;

import imat.CustomerModel;
import java.awt.Color;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JTextField;

/**
 *
 * @author Viktor
 */
public class PanelAccountInfo extends javax.swing.JPanel {

    private ImageIcon ok = new ImageIcon("src/resources/ok.png");
    /**
     * Creates new form PanelAccount
     */
    public PanelAccountInfo() {
        initComponents();
        //emailTextField.setText(CustomerModel.getEmail());
        newPasswordTextField.setText(CustomerModel.getPassword());//Temporär
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        emailLabel = new javax.swing.JLabel();
        repeatEmailLabel = new javax.swing.JLabel();
        repeatEmailTextField = new javax.swing.JTextField();
        newPasswordLabel = new javax.swing.JLabel();
        repeatPasswordLabel = new javax.swing.JLabel();
        newPasswordTextField = new javax.swing.JPasswordField();
        repeatPasswordTextField = new javax.swing.JPasswordField();
        mailErrorlabel = new javax.swing.JLabel();
        passwordErrorLabel = new javax.swing.JLabel();
        email1Ok = new javax.swing.JLabel();
        email2Ok = new javax.swing.JLabel();
        passOk = new javax.swing.JLabel();
        emailTextField = new javax.swing.JTextField();

        setOpaque(false);

        emailLabel.setText("E-post:");

        repeatEmailLabel.setText("Repetera e-post:");

        repeatEmailTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                repeatEmailTextFieldKeyTyped(evt);
            }
        });

        newPasswordLabel.setText("Nytt lösenord:");

        repeatPasswordLabel.setText("Repetera lösenord:");

        repeatPasswordTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                repeatPasswordTextFieldKeyTyped(evt);
            }
        });

        mailErrorlabel.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        mailErrorlabel.setForeground(java.awt.Color.red);

        emailTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                emailTextFieldKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(repeatEmailLabel)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(passwordErrorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(newPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(repeatPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(newPasswordLabel)
                                            .addGap(87, 87, 87)
                                            .addComponent(repeatPasswordLabel))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(emailLabel)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(mailErrorlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(6, 6, 6))))
                        .addGap(6, 6, 6))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(emailTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(repeatEmailTextField))
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(passOk, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(email2Ok, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(email1Ok, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(136, 136, 136))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailLabel)
                    .addComponent(mailErrorlabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(email1Ok, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(emailTextField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(repeatEmailLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(email2Ok, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(repeatEmailTextField))
                .addGap(21, 21, 21)
                .addComponent(passwordErrorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 5, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newPasswordLabel)
                    .addComponent(repeatPasswordLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(repeatPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passOk, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void emailTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emailTextFieldKeyTyped
        if (CustomerModel.emailTest(emailTextField.getText())){
            email1Ok.setIcon(ok);
        }else{
            email1Ok.setIcon(null);
        }
    }//GEN-LAST:event_emailTextFieldKeyTyped

    private void repeatEmailTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_repeatEmailTextFieldKeyTyped
       if (emailTextField.getText().equals(repeatEmailTextField.getText())){
              email2Ok.setIcon(ok);
        }else{
            email2Ok.setIcon(null);
         
       }
    }//GEN-LAST:event_repeatEmailTextFieldKeyTyped

    private void repeatPasswordTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_repeatPasswordTextFieldKeyTyped
        
        if(isPasswordCorrect()){
            System.out.println("ok");
            passOk.setIcon(ok);
        }else{
            passOk.setIcon(null);
            System.out.println("not ok");
        }
    }//GEN-LAST:event_repeatPasswordTextFieldKeyTyped

    
    
    /**
     * Saves both fields
     */
    public void save() {
        CustomerModel.setPassword(newPasswordTextField.getText());
        CustomerModel.setEmail(emailTextField.getText());
    }

    /**
     * check if email is filled in correctly
     *
     * @return true if both emails are correct
     */
    public boolean isEmailCorrect() {
        return (CustomerModel.emailTest(emailTextField.getText())
                && emailTextField.getText().equals(repeatEmailTextField.getText()));
    }

    /**
     * check if both passwordfields are correct
     *
     * @return true if both are correct and matching
     */
    public boolean isPasswordCorrect() {
        return (newPasswordTextField.getText().equals(repeatPasswordTextField.getText())
                && CustomerModel.passwordTest(newPasswordTextField.getText()));
    }

    /**
     * make a textinputbox show red
     * @param input what textinputbox to make red.
     */
    public void showError(JTextField input) {
        input.setBackground(new Color(240, 200, 200));
    }
        public void showLabelError(JLabel input, String str) {
        input.setText(str);
    }
     /**
     * make a textinputbox show white
     * @param input what textinputbox to make red.
     */
    private void cancelError(JTextField input){
        input.setBackground(Color.WHITE);
    }
      private void cancelLabelError(JLabel input) {
        input.setText("");
    }
    private void cancelAllErrors(JTextField textField, JLabel label) {
        cancelError(textField);
        cancelLabelError(label);
    }

    /**
     * make all textinputs show error
     */
    public void showAllErrors() {
        //showError(emailTextField);
        showError(repeatEmailTextField);
        showError(newPasswordTextField);
        showError(repeatPasswordTextField);
        showLabelError(passwordErrorLabel,"Felaktigt lösenord");
        showLabelError(mailErrorlabel,"Felaktigt e-post adress");
    }

    public void showPassError() {
        showError(newPasswordTextField);
        showError(repeatPasswordTextField);
      showLabelError(passwordErrorLabel,"Felaktigt lösenord");
    }

    public void showEmailError() {
        //showError(emailTextField);
        showError(repeatEmailTextField);
        showLabelError(mailErrorlabel,"Felaktigt e-post adress");
       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel email1Ok;
    private javax.swing.JLabel email2Ok;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JLabel mailErrorlabel;
    private javax.swing.JLabel newPasswordLabel;
    private javax.swing.JPasswordField newPasswordTextField;
    private javax.swing.JLabel passOk;
    private javax.swing.JLabel passwordErrorLabel;
    private javax.swing.JLabel repeatEmailLabel;
    private javax.swing.JTextField repeatEmailTextField;
    private javax.swing.JLabel repeatPasswordLabel;
    private javax.swing.JPasswordField repeatPasswordTextField;
    // End of variables declaration//GEN-END:variables
}
