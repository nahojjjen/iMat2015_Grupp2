/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package imat.contentPanels;

import imat.CustomerModel;
import java.awt.Color;
import javax.swing.JTextField;

/**
 *
 * @author Viktor
 */
public class PanelAccountInfo extends javax.swing.JPanel {

    /**
     * Creates new form PanelAccount
     */
    public PanelAccountInfo() {
        initComponents();
        emailTextField.setText(CustomerModel.getEmail());
        newPasswordTextField.setText(CustomerModel.getPassword());//Temporär
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        emailLabel = new javax.swing.JLabel();
        repeatEmailLabel = new javax.swing.JLabel();
        emailTextField = new javax.swing.JTextField();
        repeatEmailTextField = new javax.swing.JTextField();
        newPasswordLabel = new javax.swing.JLabel();
        repeatPasswordLabel = new javax.swing.JLabel();
        newPasswordTextField = new javax.swing.JTextField();
        repeatPasswordTextField = new javax.swing.JTextField();

        emailLabel.setText("E-post:");

        repeatEmailLabel.setText("Repetera e-post:");

        emailTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                emailTextFieldFocusGained(evt);
            }
        });

        repeatEmailTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                repeatEmailTextFieldFocusGained(evt);
            }
        });

        newPasswordLabel.setText("Nytt lösenord:");

        repeatPasswordLabel.setText("Repetera lösenord:");

        newPasswordTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                newPasswordTextFieldFocusGained(evt);
            }
        });

        repeatPasswordTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                repeatPasswordTextFieldFocusGained(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(repeatEmailTextField)
                        .addComponent(emailTextField)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(emailLabel)
                                .addComponent(repeatEmailLabel)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(newPasswordLabel)
                                    .addGap(87, 87, 87)
                                    .addComponent(repeatPasswordLabel)))
                            .addGap(59, 59, 59)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(newPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(repeatPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(158, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(emailLabel)
                .addGap(9, 9, 9)
                .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(repeatEmailLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(repeatEmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newPasswordLabel)
                    .addComponent(repeatPasswordLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(repeatPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void newPasswordTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newPasswordTextFieldFocusGained
        cancelError(newPasswordTextField);
    }//GEN-LAST:event_newPasswordTextFieldFocusGained

    private void repeatPasswordTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_repeatPasswordTextFieldFocusGained
        cancelError(repeatPasswordTextField);
    }//GEN-LAST:event_repeatPasswordTextFieldFocusGained

    private void emailTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailTextFieldFocusGained
        cancelError(emailTextField);
    }//GEN-LAST:event_emailTextFieldFocusGained

    private void repeatEmailTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_repeatEmailTextFieldFocusGained
        cancelError(repeatEmailTextField);
    }//GEN-LAST:event_repeatEmailTextFieldFocusGained

    /**
     * Saves both fields
     */
    public void save() {
        CustomerModel.setPassword(newPasswordTextField.getText());
        CustomerModel.setEmail(emailTextField.getText());
    }

    /**
     * check if email is filled in correctly
     *
     * @return true if both emails are correct
     */
    public boolean isEmailCorrect() {
        return (CustomerModel.emailTest(emailTextField.getText())
                && emailTextField.getText().equals(repeatEmailTextField.getText()));
    }

    /**
     * check if both passwordfields are correct
     *
     * @return true if both are correct and matching
     */
    public boolean isPasswordCorrect() {
        return (newPasswordTextField.getText().equals(repeatPasswordTextField.getText())
                && CustomerModel.passwordTest(newPasswordTextField.getText()));
    }

    /**
     * make a textinputbox show red
     *
     * @param input what textinputbox to make red.
     */
    public void showError(JTextField input) {
        input.setBackground(new Color(240, 200, 200));
    }
     /**
     * make a textinputbox show white
     *
     * @param input what textinputbox to make red.
     */
    public void cancelError(JTextField input){
        input.setBackground(Color.WHITE);
    }

    /**
     * make all textinputs show error
     */
    public void showAllErrors() {
        showError(emailTextField);
        showError(repeatEmailTextField);
        showError(newPasswordTextField);
        showError(repeatPasswordTextField);
    }

    public void showPassError() {
        showError(newPasswordTextField);
        showError(repeatPasswordTextField);
    }

    public void showEmailError() {
        showError(emailTextField);
        showError(repeatEmailTextField);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel emailLabel;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JLabel newPasswordLabel;
    private javax.swing.JTextField newPasswordTextField;
    private javax.swing.JLabel repeatEmailLabel;
    private javax.swing.JTextField repeatEmailTextField;
    private javax.swing.JLabel repeatPasswordLabel;
    private javax.swing.JTextField repeatPasswordTextField;
    // End of variables declaration//GEN-END:variables
}
